--------------------------------------
 - ENGIMA'S CIVILIANS (VERSION 1.0) -
--------------------------------------

Engima's Civilians is a script that adds dynamic civilians to an Arma 3 mission. Civilians spawn near player(s) 
and are removed again when they are far away. Works on maps with enterable buildings.

You can customize how many civilians there will be, civilian units classes, the maximum number of groups to use,
minimum spawn distance, maximum spawn distance, and blacklist markers to define areas where no civilians will 
be. You also add callbacks if you want to do something when units spawn or being removed.

Script works in singleplayer, multiplayer, hosted, dedicated, for JIPs, and on any map with enterable buildings.


--- VERSION HISTORY ---

1.0:   Added support for headless client.
       Added a second parameter to all callbacks for how many civilians are currently spawned.
       Added callback ON_UNIT_SPAWNING_CALLBACK that fires right before a group with a civilian is spawned.
0.9.4: Fixed: Civilian's groups was not deleted when unit was removed.
0.9.3: Fixed: Non enterable buildings was used in spawn calculations - too many civs.
0.9.2: Changed location of file ConfigAndStart.sqf.
0.9.1: Fixed initialization error.
0.9:   First version.


--- CUSTOMIZATION ---

Customize the script by editing the startup parameters. The startup parameters list is an array of key value pairs. A key value 
pair is a small array where the key object is a string with the name of the parameter setting and the value object is the actual 
value to be used.

Here is the simplest example that starts the civilian script with all default parameters. This code are to 
be put in Engima\Civilians\ConfigAndStart.sqf.

[] spawn ENGIMA_CIVILIANS_StartCivilians;

Here is an example that uses all parameters and first saves them in a variable named "_parameters". The function call (or spawn) 
that starts the civilian script is beneath. This code are to be put in Engima\Civilians\ConfigAndStart.sqf.

// Set civilian parameters.
_parameters = [
	["SIDE", civilian],
	["MIN_SKILL", 0.1],
	["MAX_SKILL", 0.1],
	["UNIT_CLASSES", ["C_man_1", "C_man_1_1_F", "C_man_1_2_F", "C_man_1_3_F", "C_man_polo_1_F", "C_man_polo_1_F_afro", "C_man_polo_1_F_euro", "C_man_polo_1_F_asia", "C_man_polo_2_F", "C_man_polo_2_F_afro", "C_man_polo_2_F_euro", "C_man_polo_2_F_asia", "C_man_polo_3_F", "C_man_polo_3_F_afro", "C_man_polo_3_F_euro", "C_man_polo_3_F_asia", "C_man_polo_4_F", "C_man_polo_4_F_afro", "C_man_polo_4_F_euro", "C_man_polo_4_F_asia", "C_man_polo_5_F", "C_man_polo_5_F_afro", "C_man_polo_5_F_euro", "C_man_polo_5_F_asia", "C_man_polo_6_F", "C_man_polo_6_F_afro", "C_man_polo_6_F_euro", "C_man_polo_6_F_asia", "C_man_p_fugitive_F", "C_man_p_fugitive_F_afro", "C_man_p_fugitive_F_euro", "C_man_p_fugitive_F_asia", "C_man_p_beggar_F", "C_man_p_beggar_F_afro", "C_man_p_beggar_F_euro", "C_man_p_beggar_F_asia", "C_man_w_worker_F", "C_scientist_F", "C_man_hunter_1_F", "C_man_p_shorts_1_F", "C_man_p_shorts_1_F_afro", "C_man_p_shorts_1_F_euro", "C_man_p_shorts_1_F_asia", "C_man_shorts_1_F", "C_man_shorts_1_F_afro", "C_man_shorts_1_F_euro", "C_man_shorts_1_F_asia", "C_man_shorts_2_F", "C_man_shorts_2_F_afro", "C_man_shorts_2_F_euro", "C_man_shorts_2_F_asia", "C_man_shorts_3_F", "C_man_shorts_3_F_afro", "C_man_shorts_3_F_euro", "C_man_shorts_3_F_asia", "C_man_shorts_4_F", "C_man_shorts_4_F_afro", "C_man_shorts_4_F_euro", "C_man_shorts_4_F_asia", "C_journalist_F", "C_Orestes", "C_Nikos", "C_Nikos_aged"]],
	["UNITS_PER_BUILDING", 0.1],
	["MAX_GROUPS_COUNT", 100],
	["MIN_SPAWN_DISTANCE", 50],
	["MAX_SPAWN_DISTANCE", 500],
	["BLACKLIST_MARKERS", []],
	["HIDE_BLACKLIST_MARKERS", true],
	["ON_UNIT_SPAWNING_CALLBACK", { true }],
	["ON_UNIT_SPAWNED_CALLBACK", {}],
	["ON_UNIT_REMOVE_CALLBACK", { true }],
	["DEBUG", true]
];

// Start the civilian script
_parameters spawn ENGIMA_CIVILIANS_StartCivilians;

Here is a complete list of the parameters and what they do:

* SIDE (Side): Which side the spawned groups and units will belong to. Can be east, west, independent or civilian.

* MIN_SKILL (Scalar): Units' minimum skill. Must be between 0 and 1 inclusively, and less than or equal to 
  MAX_SKILL. Actual skill of each spawned unit will be a random number between MIN_SKILL and MAX_SKILL. This
  option probably only makes sense if script is used to spawn something else than civilians.
  Example: 0.4

* MAX_SKILL (Scalar): Units' maximum skill. Must be between 0 and 1 inclusively, and greather than or equal to 
  MIN_SKILL. Actual skill of each spawned unit will be a random number between MIN_SKILL and MAX_SKILL. This
  option probably only makes sense if script is used to spawn something else than civilians.
  Example: 0.6

* UNIT_CLASSES (Array): Array of unit classes that may be spawned. If you want to see more of one unit class than another, 
  then have it occur a couple of more often (or more seldom) in the array:
  Example: ["C_man_1", "C_man_1", "C_man_1", "C_man_polo_1_F_asia"]
  
* UNITS_PER_BUILDING (Number): Number of units that are spawned. Since we want to see a lot more civilians per area unit in a 
  city compared to the country side, the number is set as "number of units per building". Default value is 0.1 which means 
  that if you have 50 buildings near you, you will have 5 civilians near you. A building or a civilian is regarded as "near" 
  if they are within the MAX_SPAWN_DISTANCE of any player.
  Example: 0.1

* MAX_GROUPS_COUNT (Number): The maximum number of groups in Arma 3 is 144, and each civilian is most often put in a separate 
  group. This options is to prevent that too many groups are being spawned. E.g. if your mission make use of 30 groups except 
  for the groups created by Engima's Civilians, a good value here would be 110.
  Example: 100

* MIN_SPAWN_DISTANCE (Number): Minimum spawn distance in meters from nearest human player on the map. Civilian units always 
  spawn inside buildings, so this option may be quite small. It should be at least 100 meters less than MAX_SPAWN_DISTANCE.
  Example: 50

* MAX_SPAWN_DISTANCE (Number): Maximum spawn distance in meters from nearest human player on the map. Civilians more far away 
  than this number of meters are deleted. It should be at least 100 meters greater than MAX_SPAWN_DISTANCE.
  Example: 500
  
* BLACKLIST_MARKERS (Array): An array of marker hames for markers where no civilians are allowed to be. Civilians will not 
  spawn nor have destination position inside any of these markers. However, a unit may spawn on one side of it and get a 
  destination on the other, and then the civ will probably walk the shortest way and cross the area. To make sure that no 
  civilians are inside these markers, set them to be greater than MAX_SPAWN_DISTANCE in radious.
  Example: ["MilitaryAreaMarker", "NoCivsHereMarker"]
  
* HIDE_BLACKLIST_MARKERS (Boolean): Wether the area markers will be hidden or not. If true then the markers will be hidden on 
  the map for the players, otherwise it will be visible. Default value is true.

* ON_UNIT_SPAWNING_CALLBACK (Code): Callback that is executed right before a civilian spawns. Parameter 
  _this is an array with the following items:
    0 (Array): An array with spawn arguments. This array can be manipulated. Change the first item to spawn on 
    another position, and change the second parameter to spawn a unit of another class than suggested. The spawn
    arguments array is specified like this:
      0 (Array): The position where the unit is suggested to spawn (can be modified).
      1 (String): The classname for the unit to spawn (can be modified).
    1 (Scalar): Number of civilians spawned and currently controlled by the script.
    2 (Scalar): Calculated maximun number of civilians that the script will try to spawn (depends on how many
    houses that are near the players).
  Note that this callback is executed with the "call" command. The example below will not spawn any civilians
  in the night.
  Example: { private _goOnWithSpawn = (dayTime > 8 && dayTime < 22); _goOnWithSpawn )

* ON_UNIT_SPAWNED_CALLBACK (Code): Code that is executed when a unit has spawned. Parameter _this is an array: 0 (Object): 
  created unit; 1 (Scalar): Number of civilians spawned and currently handled by this script. Note that this is executed 
  with the "spawn" command.
  Example: { hint ("A unit named " + vehicleVarName (_this select 0) + " created!")

* ON_UNIT_REMOVE_CALLBACK (Code): Code that is executed just before a unit is removed. Parameter _this is an array with
  the following items: 0 (Object): The unit that will be removed; 1 (Scalar): Number of civilians spawned and currently
  handled by this script. Note that this callback is executed with the "call" command. Default return value is { true }. 
  Return false if you for some reason want the unit to be kept on the map.
  Example: { hint "Vehicle of type " + typename (_this select 0) + " will not be removed!"; false }

* DEBUG (Boolean): Whether script is running in debug mode or not. In debug mode all civilians are marked as dots on 
  the map. Can be true or false. Default value is false.


- USING MORE THAN ONE INSTANCE -

Script cannot run in more than one instance.


- RUNNING ON HEADLESS CLIENT -

This script can be routed to execute on a headless client. All instances that you define for start in the file
Engima\Civilians\ConfigAndStart.sqf will execute on either the server (default) or on a headless client.

To route the execution to a headless client, follow these steps:

1. Create a headless client unit in the Arma 3 editor and give it a name.
2. Edit the file Engima\Civilians\HeadlessClient.sqf and assign the variable 
   Engima_Civilians_HeadlessClientName the name of your headless client unit.
   Example: Engima_Traffic_HeadlessClientName = "HC1";
3. Have your server support headless clients.

For more information (for step 3 particulary), see the official and general documentation about headless clients.

